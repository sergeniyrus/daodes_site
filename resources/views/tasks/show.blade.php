@extends('template')

@section('title_page')
    –ë–∏—Ä–∂–∞ –∑–∞–¥–∞–Ω–∏–π
@endsection

@section('main')
    <style>
        .task-details,
        .bid,
        form {
            background-color: #0b0c18ce;
            padding: 20px;
            margin: 0px auto 20px auto;
            width: 90%;
        }

        .rating-stars {
            display: flex;
            gap: 5px;
        }

        .star {
            font-size: 2rem;
            color: transparent;
            cursor: pointer;
            border-radius: 5px;
            padding: 2px;
        }

        .star_off {
            border: 1px solid #ffdf00;
        }

        .star.filled {
            color: #ffdf00;
            border-color: #ffdf00;
        }

        .timer {
            font-size: 1.5rem;
            color: #f8f9fa;
            margin-top: 10px;
        }

        .task-details {
            border-radius: 10px;
            border: 2px solid #f8f9fa;
            margin: 20px auto;
        }

        .bid {
            border: 1px solid #d7fc09;
            border-radius: 10px;
        }

        .bid-form {
            padding: 20px;
            border: 2px solid #007bff;
            border-top: none;
            width: 45%;
            margin: 0% auto;
        }

        .form-group {
            margin: 20px 50px;
        }

        .task-line {
            color: #00ccff;
        }

        .task-line2 {
            color: #ffffff;
        }

        .task-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            color: #d7fc09;
            margin-top: 10px;
        }

        .task-title {
            flex: 1;
            text-align: center;
            color: #00ccff;
        }

        .task-wrapper {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .task-budget,
        .task-deadline,
        .task-category {
            font-size: 0.875rem;
            margin: 0 10px;
        }

        .bid-title {
            text-align: center;
            color: #00ccff;
            margin: 20px;
        }

        /* –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–ª—è –∫–Ω–æ–ø–æ–∫ */

        .button-container {
    text-align: center;
    background: none;
}

.blue_btn {
    display: inline-block;
    color: #ffffff;
    font-size: large;
    background: #0b0c18;
    padding: 15px 30px;
    border: 1px solid #d7fc09;
    border-radius: 10px;
    box-shadow: 0 0 20px #000;
    transition: box-shadow 0.3s ease, transform 0.3s ease;
    gap: 15px;
}

.blue_btn:hover {
    box-shadow: 0 0 20px #d7fc09, 0 0 40px #d7fc09, 0 0 60px #d7fc09;
    transform: scale(1.05);
    color: #ffffff;
    background: #0b0c18;
}
.icon-like,
.icon-dislike,
.icon-edit,
.icon-delete {
    font-size: 1.2em; /* –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–æ–∫ */
    margin-right: 5px; /* –û—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ */
    color: #d7fc09; /* –û–±—â–∏–π —Ü–≤–µ—Ç –∏–∫–æ–Ω–æ–∫, –µ—Å–ª–∏ –Ω—É–∂–µ–Ω */
}

/* –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–∫–æ–Ω–∫–∏ */
.icon-like {
    color: #4CAF50; /* –ó–µ–ª–µ–Ω—ã–π –¥–ª—è –ª–∞–π–∫–∞ */
}

.icon-dislike {
    color: #FF5722; /* –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è –¥–∏–∑–ª–∞–π–∫–∞ */
}

.icon-edit {
    color: #2196F3; /* –°–∏–Ω–∏–π –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */
}

.icon-delete {
    color: #F44336; /* –ö—Ä–∞—Å–Ω—ã–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è */
}

form {
    background-color: #0b0c18ce;
    padding: 20px;
    margin: 0px auto 20px auto;
    width: 90%;
}

input,
textarea {
    background-color: #000000;
    color: #fff;
    border: 1px solid #a0ff08;
    border-radius: 5px;
    width: 100%;
    padding: 10px;
    margin: 10px auto 15px auto;
}

label {
    color: #f8f9fa;
}

@media (max-width: 768px) {
    .task-wrapper {
        flex-direction: column;
        align-items: center;
    }

    .task-info {
        justify-content: space-around;
        width: 100%;
        margin-top: 10px;
    }

    .task-info p {
        margin: 5px 0;
    }
}

@media (max-width: 480px) {
    .task-info {
        flex-direction: column;
        align-items: center;
    }
}

    </style>
    <!-- –ó–∞–¥–∞–Ω–∏–µ –±–∏—Ä–∂–∏ -->
    <div class="task-details">
        <div class="bid">
            <div class="task-wrapper">
                <div class="task-title">
                    <h1 style="text-align: center">{{ $task->title }}</h1>
                </div>
                <div class="task-info">
                    <p class="task-category"><i class="fas fa-folder-open"></i>
                        {{ $task->category ? $task->category->name : '–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' }}</p>
                    <p class="task-budget"><i class="fas fa-dollar-sign"></i> {{ $task->budget }}</p>
                    <p class="task-deadline"><i class="fas fa-clock"></i> {{ $task->deadline }}</p>
                </div>
            </div>
            <div>
                <p>{{ $task->description }}</p>
            </div>
        </div>

        <br>

        <!-- –¢–∞–π–º–µ—Ä –∑–∞–¥–∞–Ω–∏—è, –≤–∏–¥–µ–Ω –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º -->
        @if ($task->status === 'in_progress')
            <div id="timer" class="timer" style="display:none;"></div>
            <p id="start_time_display" style="color: #f8f9fa; font-size: 1.2rem;"></p>
            <p id="end_time_display" style="color: #f8f9fa; font-size: 1.2rem;"></p>
            <p id="current_time_display" style="color: #f8f9fa; font-size: 1.2rem;"></p>
        @endif

        @if ($task->completed && $task->rating)
            <div class="task-rating" style="text-align: center">
                <p><strong>–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –∏ –æ—Ü–µ–Ω–µ–Ω–æ –Ω–∞:</strong></p>
                <div class="rating-stars" style="display: flex; justify-content: center; align-items: center;">
                    @for ($i = 1; $i <= 10; $i++)
                        <span class="star {{ $i <= $task->rating ? 'filled' : '' }}" style="font-size: 24px;">‚òÖ</span>
                    @endfor
                </div>
            </div><br>
        @endif

        <!-- –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–µ–º -->
        <div class="button-container">
            <!-- –õ–∞–π–∫ –∏ –¥–∏–∑–ª–∞–π–∫ -->
            <form action="{{ route('tasks.like', $task) }}" method="POST" class="likebtn" style="display:inline;">
                @csrf
                <button type="submit" class="blue_btn">
                    <i class="fas fa-thumbs-up icon-like"></i> <!-- –ò–∫–æ–Ω–∫–∞ –ª–∞–π–∫–∞ -->
                    ({{ $task->votes()->where('is_like', true)->count() }})
                </button>
            </form>
            <form action="{{ route('tasks.dislike', $task) }}" method="POST" class="likebtn" style="display:inline;">
                @csrf
                <button type="submit" class="blue_btn">
                    <i class="fas fa-thumbs-down icon-dislike"></i> <!-- –ò–∫–æ–Ω–∫–∞ –¥–∏–∑–ª–∞–π–∫–∞ -->
                    ({{ $task->votes()->where('is_like', false)->count() }})
                </button>
            </form>

            @if (Auth::id() == $task->user_id && !$task->accepted_bid_id)
                <form action="{{ route('tasks.edit', $task) }}" method="GET" class="likebtn" style="display:inline;">
                    @csrf
                    <button type="submit" class="blue_btn" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                        <i class="fas fa-edit icon-edit"></i> <!-- –ò–∫–æ–Ω–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è -->
                    </button>
                </form>

                <form action="{{ route('tasks.destroy', $task) }}" method="POST" class="likebtn" style="display:inline;">
                    @csrf
                    @method('DELETE')
                    <button type="submit" class="blue_btn" title="–£–¥–∞–ª–∏—Ç—å">
                        <i class="fas fa-trash-alt icon-delete"></i> <!-- –ò–∫–æ–Ω–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è -->
                    </button>
                </form>
            @endif

            @if ($task->accepted_bid_id && !$task->in_progress && Auth::id() == $task->user_id)
                <form action="{{ route('tasks.start_work', $task) }}" method="POST" style="display:inline;"
                    class="likebtn">
                    @csrf
                    <button type="submit" class="blue_btn">üöÄ –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å</button>
                </form>
            @endif

            @if ($task->in_progress && $task->status === 'on_review')
                @if (Auth::id() == $task->user_id)
                    <form action="{{ route('tasks.complete', $task) }}" method="POST" class="likebtn"
                        style="display:inline;">
                        @csrf
                        <button type="submit" class="blue_btn">‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</button>
                    </form>

                    <!-- –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–¥–µ—Å—å -->
                    <form action="{{ route('tasks.continue', $task) }}" method="POST" class="likebtn"
                        style="display:inline;">
                        @csrf
                        <button type="submit" class="blue_btn">‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</button>
                    </form>

                    <form action="{{ route('tasks.fail', $task) }}" method="POST" class="likebtn" style="display:inline;">
                        @csrf
                        <button type="submit" class="blue_btn">‚ùå –ó–∞–¥–∞–Ω–∏–µ –ø—Ä–æ–≤–∞–ª–µ–Ω–æ</button>
                    </form>
                @endif
            @endif
        </div>
        <br>

        @if (session('success'))
            <div class="alert alert-success" style="color:#ffdf00; text-align:center">
                {{ session('success') }}
            </div>
        @endif

        <br>
        <hr>

        <!-- –†–∞–∑–¥–µ–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π -->
        <div class="bids-section">
            <div class="bid-title">
                <h1>
                    @if ($task->status === 'completed')
                        –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                    @elseif ($task->status === 'on_review')
                        –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ
                    @elseif ($task->status === 'in_progress')
                        –ó–∞–¥–∞–Ω–∏–µ –≤ —Ä–∞–±–æ—Ç–µ
                    @elseif ($task->accepted_bid_id)
                        –ü—Ä–∏–Ω—è—Ç–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                    @else
                        –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
                    @endif
                </h1>
            </div>

            @if ($task->accepted_bid_id)
                @php
                    $acceptedBid = $task
                        ->bids()
                        ->where('id', $task->accepted_bid_id)
                        ->first();
                @endphp
                <div class="bid">
                    <p><strong class="task-line">–§—Ä–∏–ª–∞–Ω—Å–µ—Ä:</strong> {{ $acceptedBid->user->name }}</p>
                    <p><strong class="task-line">–¶–µ–Ω–∞:</strong> {{ $acceptedBid->price }} DESCoin</p>
                    <p><strong class="task-line">–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> {{ $acceptedBid->days }} –¥–Ω–µ–π
                        {{ $acceptedBid->hours }} —á–∞—Å–æ–≤</p>
                    <p><strong class="task-line">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {{ $acceptedBid->comment }}</p>

                    @if ($task->accepted_bid_id && !$task->in_progress && Auth::id() == $task->acceptedBid->user_id)
                        <form action="{{ route('tasks.start_work', $task) }}" method="POST" class="likebtn"
                            style="display:inline;">
                            @csrf
                            <br>
                            <button type="submit" class="blue_btn">üöÄ –ü—Ä–∏—Å—Ç—É–ø–∏—Ç—å</button>
                        </form>
                    @endif

                    @if (Auth::id() == $acceptedBid->user_id)
                        @if ($task->status === 'in_progress' && !$task->completed)
                            <form action="{{ route('tasks.freelancer-complete', $task) }}" method="POST" class="likebtn">
                                @csrf
                                <button type="submit" class="blue_btn">‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</button>
                            </form>
                        @elseif ($task->status === 'on_review')
                            <p style="text-align: center; color:#ffdf00"><span>–ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ</span></p>
                        @endif
                    @endif
                </div>
            @else
                @foreach ($task->bids as $bid)
                    <div class="bid">
                        <p class="task-line2"><strong class="task-line">–§—Ä–∏–ª–∞–Ω—Å–µ—Ä:</strong> {{ $bid->user->name }}</p>
                        <p class="task-line2"><strong class="task-line">–¶–µ–Ω–∞:</strong> {{ $bid->price }} DESCoin</p>
                        <p class="task-line2"><strong class="task-line">–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</strong> {{ $bid->days }}
                            –¥–Ω–µ–π {{ $bid->hours }} —á–∞—Å–æ–≤</p>
                        <p class="task-line2"><strong class="task-line">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {{ $bid->comment }}</p>

                        @if (Auth::id() == $task->user_id && !$task->accepted_bid_id)
                            <form action="{{ route('bids.accept', $bid) }}" method="POST" style="display:inline;">
                                @csrf
                                <br><button type="submit" class="blue_btn">‚úîÔ∏è –ü—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</button>
                            </form>
                        @endif
                    </div>
                @endforeach
            @endif
        </div>

        <!-- –†–∞–∑–¥–µ–ª –æ—Ü–µ–Ω–∫–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è -->
        @if ($task->completed && $task->accepted_bid_id && Auth::id() == $task->user_id)
            <div class="rating-form">
                <h3>–û—Ü–µ–Ω–∏—Ç—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è</h3>
                <form action="{{ route('tasks.rate', $task) }}" method="POST">
                    @csrf
                    <div class="rating-stars">
                        @for ($i = 1; $i <= 10; $i++)
                            <span class="star star_off" data-value="{{ $i }}">‚òÖ</span>
                        @endfor
                    </div>
                    <input type="hidden" name="rating" id="rating" value="0">
                    <button type="submit" class="blue_btn">–ü–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ü–µ–Ω–∫—É</button>
                </form>
            </div>
        @endif

        <!-- –†–∞–∑–¥–µ–ª –¥–ª—è –ø–æ–¥–∞—á–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è -->
        @if (Auth::check() && Auth::id() !== $task->user_id && !$task->accepted_bid_id)
            @if ($task->bids()->where('user_id', Auth::id())->exists())
                <p style="text-align: center; color:#ffdf00">–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ.</p>
            @else
                <div class="bid-form">
                    <form action="{{ route('tasks.bid', $task) }}" method="POST">
                        @csrf
                        <fieldset>
                            <legend>
                                <h3 style="text-align: center">–ü–æ–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h3>
                            </legend>
                            <div class="form-group">
                                <label for="price">–¶–µ–Ω–∞ (DESCoin):</label>
                                <input type="number" name="price" id="price"
                                    style="color: #d7fc09; font-size:xx-large" required>
                            </div>
                            <div class="form-group">
                                <label for="days">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–¥–Ω–∏):</label>
                                <input type="number" name="days" id="days"
                                    style="color: #d7fc09; font-size:xx-large" required>
                            </div>
                            <div class="form-group">
                                <label for="hours">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (—á–∞—Å—ã):</label>
                                <input type="number" name="hours" id="hours"
                                    style="color: #d7fc09; font-size:xx-large" required>
                            </div>
                            <div class="form-group">
                                <label for="comment">–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                                <textarea name="comment" id="comment" style="color: #d7fc09; font-size:xx-large" rows="3"></textarea>
                            </div>
                            <button type="submit" class="blue_btn">–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</button>
                        </fieldset>
                    </form>
                </div>
            @endif
        @endif
    </div>



    <script>
        // –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
        document.querySelectorAll('.star').forEach(star => {
            star.addEventListener('click', function() {
                const ratingValue = this.getAttribute('data-value');
                document.getElementById('rating').value = ratingValue;

                document.querySelectorAll('.star').forEach(s => {
                    s.classList.remove('filled');
                });

                this.classList.add('filled');
                let prevSibling = this.previousElementSibling;
                while (prevSibling) {
                    prevSibling.classList.add('filled');
                    prevSibling = prevSibling.previousElementSibling;
                }
            });
        });

        //—Å–∫—Ä–∏–ø—Ç —Ç–∞–π–º–µ—Ä–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏

        let countdownTimer;

        function startTimer(days, hours, startTime) {
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã (UTC)
            const startTimeMillis = new Date(startTime + 'Z').getTime(); // –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ 'Z'

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–Ω–∏ –∏ —á–∞—Å—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
            const totalTime = (days * 24 * 60 * 60 * 1000) + (hours * 60 * 60 * 1000);

            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–Ω–µ—á–Ω–æ–µ –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
            const endTime = startTimeMillis + totalTime;

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–π–º–µ—Ä
            const timerDiv = document.getElementById('timer');
            timerDiv.style.display = 'block';

            // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∑–∞–¥–∞—á–∏
            const startDate = new Date(startTimeMillis);
            const startTimeDisplay = document.getElementById('start_time_display');
            startTimeDisplay.innerHTML = `–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã: ${startDate.toUTCString()}`;

            // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
            const endDate = new Date(endTime);
            const endTimeDisplay = document.getElementById('end_time_display');
            endTimeDisplay.innerHTML = `–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${endDate.toUTCString()}`;
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
            setInterval(function() {
                const now = new Date(); // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
                const currentTimeDisplay = document.getElementById('current_time_display');
                currentTimeDisplay.innerHTML = `–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è UTC: ${now.toUTCString()}`;
            }, 1000);

            countdownTimer = setInterval(function() {
                // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC
                const now = new Date().getTime(); // getTime() –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç UTC

                const remainingTime = endTime - now;

                // –ö–æ–≥–¥–∞ –≤—Ä–µ–º—è –≤—ã—à–ª–æ
                if (remainingTime <= 0) {
                    clearInterval(countdownTimer);
                    timerDiv.innerHTML = "–í—Ä–µ–º—è –≤—ã—à–ª–æ, –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ.";
                    return;
                }

                // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–Ω–µ–π, —á–∞—Å–æ–≤, –º–∏–Ω—É—Ç –∏ —Å–µ–∫—É–Ω–¥
                const seconds = Math.floor((remainingTime / 1000) % 60);
                const minutes = Math.floor((remainingTime / 1000 / 60) % 60);
                const hoursLeft = Math.floor((remainingTime / (1000 * 60 * 60)) % 24);
                const daysLeft = Math.floor(remainingTime / (1000 * 60 * 60 * 24));

                timerDiv.innerHTML =
                    `–î–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∑–∞–¥–∞–Ω–∏–µ–º –æ—Å—Ç–∞–ª–æ—Å—å: ${daysLeft} –¥–Ω. ${hoursLeft} —á. ${minutes} –º–∏–Ω. ${seconds} —Å–µ–∫.`;
            }, 1000);

            // –õ–æ–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π
            console.log("–ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –¥–Ω–∏ = ", days, "—á–∞—Å—ã = ", hours);


        }

        // –ï—Å–ª–∏ –∑–∞–¥–∞—á–∞ –≤ —Ä–∞–±–æ—Ç–µ, –∑–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        @if ($task->in_progress && $task->start_time)
            @php
                // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –ø—Ä–∏–Ω—è—Ç–æ
                $acceptedBid = $task
                    ->bids()
                    ->where('id', $task->accepted_bid_id)
                    ->first();
            @endphp
            @if ($acceptedBid)
                startTimer({{ $acceptedBid->days }}, {{ $acceptedBid->hours }}, '{{ $task->start_time }}');
            @endif
        @endif

        function stopTimer() {
            clearInterval(timer); // –ó–¥–µ—Å—å 'timer' ‚Äî —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –≥–¥–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤–∞—à —Ç–∞–π–º–µ—Ä
        }
    </script>


@endsection
